#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct Employee {
    int id;
    char name[30];
    float salary;
};

int main() {
    FILE *fp;
    struct Employee emp;
    int choice, emp_id, found;
    long pos;

    fp = fopen("employee.dat", "rb+");
    if (fp == NULL) {
        fp = fopen("employee.dat", "wb+");
        if (fp == NULL) {
            printf("Error opening file!\n");
            exit(1);
        }
    }

    while (1) {
        printf("\n--- Employee Record System (Random Access File) ---\n");
        printf("1. Add Record\n");
        printf("2. Display All Records\n");
        printf("3. Search Record\n");
        printf("4. Update Record\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            // Add employee
            fseek(fp, 0, SEEK_END);
            printf("Enter Employee ID: ");
            scanf("%d", &emp.id);
            printf("Enter Name: ");
            scanf("%s", emp.name);
            printf("Enter Salary: ");
            scanf("%f", &emp.salary);
            fwrite(&emp, sizeof(emp), 1, fp);
            printf("Record added successfully!\n");
            break;

        case 2:
            // Display all employees
            rewind(fp);
            printf("\nEmployee Details:\n");
            printf("----------------------------\n");
            while (fread(&emp, sizeof(emp), 1, fp) == 1) {
                printf("ID: %d | Name: %s | Salary: %.2f\n", emp.id, emp.name, emp.salary);
            }
            break;

        case 3:
            // Search employee by ID
            printf("Enter Employee ID to search: ");
            scanf("%d", &emp_id);
            rewind(fp);
            found = 0;
            while (fread(&emp, sizeof(emp), 1, fp) == 1) {
                if (emp.id == emp_id) {
                    printf("\nRecord Found:\nID: %d\nName: %s\nSalary: %.2f\n",
                           emp.id, emp.name, emp.salary);
                    found = 1;
                    break;
                }
            }
            if (!found)
                printf("Record not found!\n");
            break;

        case 4:
            // Update employee record
            printf("Enter Employee ID to update: ");
            scanf("%d", &emp_id);
            rewind(fp);
            found = 0;
            while (fread(&emp, sizeof(emp), 1, fp) == 1) {
                if (emp.id == emp_id) {
                    pos = ftell(fp) - sizeof(emp);
                    printf("Enter new name: ");
                    scanf("%s", emp.name);
                    printf("Enter new salary: ");
                    scanf("%f", &emp.salary);
                    fseek(fp, pos, SEEK_SET);
                    fwrite(&emp, sizeof(emp), 1, fp);
                    printf("Record updated successfully!\n");
                    found = 1;
                    break;
                }
            }
            if (!found)
                printf("Record not found!\n");
            break;

        case 5:
            fclose(fp);
            printf("Exiting program...\n");
            exit(0);

        default:
            printf("Invalid choice!\n");
        }
    }
}

