#include <stdio.h>

struct Process {
    int pid;    // Process ID
    int at;     // Arrival Time
    int bt;     // Burst Time
    int ct;     // Completion Time
    int tat;    // Turnaround Time
    int wt;     // Waiting Time
    int done;   // Flag to mark completion
};

int main() {
    int n, completed = 0, t = 0, min_bt;
    float total_tat = 0, total_wt = 0;

    printf("Enter number of processes: ");
    scanf("%d", &n);

    struct Process p[n];

    for (int i = 0; i < n; i++) {
        printf("Enter Arrival Time and Burst Time for P%d: ", i + 1);
        p[i].pid = i + 1;
        scanf("%d%d", &p[i].at, &p[i].bt);
        p[i].done = 0;
    }

    printf("\nGantt Chart:\n");
    while (completed != n) {
        int shortest = -1;
        min_bt = 9999;

        for (int i = 0; i < n; i++) {
            if (p[i].at <= t && p[i].done == 0 && p[i].bt < min_bt) {
                min_bt = p[i].bt;
                shortest = i;
            }
        }

        if (shortest == -1) { // No process ready
            t++;
            continue;
        }

        printf("P%d ", p[shortest].pid);
        t += p[shortest].bt;
        p[shortest].ct = t;
        p[shortest].tat = p[shortest].ct - p[shortest].at;
        p[shortest].wt = p[shortest].tat - p[shortest].bt;
        total_tat += p[shortest].tat;
        total_wt += p[shortest].wt;
        p[shortest].done = 1;
        completed++;
    }

    printf("\n\nProcess\tAT\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++)
        printf("P%d\t%d\t%d\t%d\t%d\t%d\n",
               p[i].pid, p[i].at, p[i].bt, p[i].ct, p[i].tat, p[i].wt);

    printf("\nAverage Turnaround Time = %.2f", total_tat / n);
    printf("\nAverage Waiting Time = %.2f\n", total_wt / n);

    return 0;
}
